// E-I integration with multiple Es and Is getting involved insimultaneously//

/*apical trunk list: 0(41.50)-2(94.47)-14(122.82)-28(151.46)-30(179.70)-32(195.53)-40(201.79)-
	-44(227.96)-52(254.45)-60(262.17)-66(268.27)-72(283.71)-74(311.14)-78(343.59)*/

load_file("preload_files.hoc")

cvode.active(0)
dt=0.1

tstop=250

factor=1

ni = 15*factor		//number of Is 
ne = 15*factor		//number of Es
trial =1	//number of trials
seed = 20               

nume=ne*(ne-1)/2
numi=ni*(ni-1)/2

objref ampa[ne], nmda[ne], stim_glut[ne], b
objref gabaa[ni], gabab[ni], stim_gaba[ni] 
double I_loc[ni], E_loc[ne]
double E_start[ne], I_start[ni]
objref EPSP[ne], IPSP[ni], E_EPSP[nume], I_IPSP[numi], E_IPSP[ne*ni], SUM
strdef source_path, target_path 

access soma
	distance()
	
for i=0, ni-1{	
	stim_gaba[i] = new NetStim1(0.5)
	stim_gaba[i].number=1
}

for j=0, ne-1{	
	stim_glut[j] = new NetStim1(0.5)
	stim_glut[j].number=1
}	

proc step() {	local i
	fadvance()
	/*	if(ngraph!=0) {
			for i=0, ngraph-1{
				g[i].plot(t)
				g[i].flush()
				doNotify()
			}
		}         */
}

proc run() { local j
	init()
/*	if(ngraph!=0) {
		for j=0, ngraph-1{
				g[j].begin()
		}
	}	  */
	while(t<tstop) {		
	step()}	
}

objref savdata, recv 
recv=new Vector()
recv.record(&soma.v(0))
objref r_gaba, r_ampa

for i = 0, ne-1 {
  EPSP[i]=new Vector()
}

for i = 0, ni-1 {
  IPSP[i]=new Vector()
}

for i = 0, nume-1 {
  E_EPSP[i]=new Vector()
}

for i = 0, numi-1 {
  I_IPSP[i]=new Vector()
}

for i = 0, ne*ni-1 {
  E_IPSP[i]=new Vector()
}

SUM= new Vector()

gabaa_gstart = 1e-3	  //0.0001
gabaa_gend =1e-2	  //0.004
ampa_gstart = 1e-3	  //0.0001
ampa_gend = 1e-2        //0.001

proc main() { local i, j
	
	savdata = new File()
	savdata.wopen(target_path)
	
	ropen(source_path)
  for j=0, ne-1{ 	E_loc[j] = fscan() }
	for i=0, ni-1{ 	I_loc[i] = fscan() }

	for j=0, ne-1{ 	E_start[j] = fscan()+20 }
  for i=0, ni-1{ 	I_start[i] = fscan()+20 }

  
	ropen() 	
	
 	r_gaba = new Random(seed)       r_ampa = new Random(seed+5)
	r_gaba.uniform(gabaa_gstart, gabaa_gend) 		r_ampa.uniform(ampa_gstart, ampa_gend) 	
	
for r=0, trial-1{
			
	for i=0, ni-1{ 		
		
	  dend[I_loc[i]] {
			 				
		
		I_dist=distance(0.5)
		print "I_dist	", I_dist
		
		gabaa[i]= new GABAa()
		gabab[i]= new GABAb()
		gabaa[i].loc(0.5)
		gabab[i].loc(0.5)
		setpointer gabaa[i].pre, stim_gaba[i].y	// assign presynaptic compartment
		setpointer gabab[i].pre, stim_gaba[i].y
		gabaa[i].gmax= r_gaba.repick()	 // 0.0003
       // gabab[i].gmax= gabaa[i].gmax*gabab_gabaa_ratio
	  }	
	}
	
	for j=0, ne-1{ 		
		
	  dend[E_loc[j]] { 
	  
		E_dist=distance(0.5)
		print "E_dist	", E_dist 
	    	
		ampa[j] = new AMPA()
		nmda[j] = new NMDA()
		ampa[j].loc(0.5)
		nmda[j].loc(0.5)
		setpointer ampa[j].pre, stim_glut[j].y	// assign presynaptic compartment
		setpointer nmda[j].pre, stim_glut[j].y			
		
	 	if(!Block_NMDA_Flag){
	 	 		nmda_ampa_ratio = 0.6/(1+E_dist/300)
	 	}else{
	 	 		nmda_ampa_ratio = 0.1*0.6/(1+E_dist/300)
	 	}
	 	
	 	ampa[j].gmax	= r_ampa.repick() //0.0001
		//nmda[j].gmax = ampa[j].gmax*nmda_ampa_ratio
 	  }
	}

  for i=0, ni-1{	      
		stim_gaba[i].start=10000
	}
			
  for j=0, ne-1{
		stim_glut[j].start=10000
  }


// EPSP record //
    
	for j=0, ne-1{
		stim_glut[j].start=E_start[j]
		run()	
		EPSP[j] = recv.c.sub(Vrest)	
		stim_glut[j].start=10000
    EPSP[j].printf(savdata,"%g \t")
	}

// IPSP record //
	   
	for i=0, ni-1{	      
		stim_gaba[i].start = I_start[i]
		run()	
		IPSP[i] = recv.c.sub(Vrest)	
		stim_gaba[i].start = 10000	 
    IPSP[i].printf(savdata,"%g \t")
	}   

  // E-E pair record
  k=0
  for i = 0, ne-1{
    stim_glut[i].start=E_start[i]
	  for j=i+1, ne-1{
  		stim_glut[j].start=E_start[j]
  		run()	
  		E_EPSP[k] = recv.c.sub(Vrest)	
      stim_glut[j].start=10000
      E_EPSP[k].printf(savdata,"%g \t")
      k=k+1
	 }
  stim_glut[i].start=10000
 }

  // I-I pair record
  k=0
  for i = 0, ni-1{
    stim_gaba[i].start=I_start[i]
	  for j=i+1, ni-1{
  		stim_gaba[j].start=I_start[j]
  		run()	
  		I_IPSP[k] = recv.c.sub(Vrest)	
      stim_gaba[j].start=10000
      I_IPSP[k].printf(savdata,"%g \t")
      k=k+1
	 }
  stim_gaba[i].start=10000
 }

  // E-I pair record
  k=0
  for i = 0, ne-1{
    stim_glut[i].start=E_start[i]
	  for j=0, ni-1{
  		stim_gaba[j].start=I_start[j]
  		run()	
  		E_IPSP[k] = recv.c.sub(Vrest)	
      stim_gaba[j].start=10000
      E_IPSP[k].printf(savdata,"%g \t")
      k=k+1
	 }
  stim_glut[i].start=10000
 }


// Sum record
  for i=0, ni-1{	      
		stim_gaba[i].start=I_start[i]
	}
			
  for j=0, ne-1{
		stim_glut[j].start=E_start[j]
  }
  run()	
	SUM = recv.c.sub(Vrest)	
  SUM.printf(savdata,"%g \t")

}
 		                                       
savdata.close()                                             
print "Done!\n"                     

}


/*
// Result Plot //
 
b = new HBox()
b.intercept(1)

addgraph("soma.v(0)", -75, -55)
b.intercept(0)
b.map()                */



proc Normal(){
		
		sprint(source_path, "%s", "source.dat")
		sprint(target_path, "%s", "target.dat")
		main()
		
}

Normal()



	

